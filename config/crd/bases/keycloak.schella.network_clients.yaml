---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: clients.keycloak.schella.network
spec:
  group: keycloak.schella.network
  names:
    kind: Client
    listKind: ClientList
    plural: clients
    singular: client
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.clientId
      name: ClientID
      type: string
    - jsonPath: .spec.realmRef.name
      name: Realm
      type: string
    - jsonPath: .spec.enabled
      name: Enabled
      type: boolean
    - jsonPath: .status.ready
      name: Ready
      type: boolean
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Client is the Schema for the clients API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              adminUrl:
                description: URL to the admin interface of the client. Set this if
                  the client supports the adapter REST API. This REST API allows the
                  auth server to push revocation policies and other administrative
                  tasks. Usually this is set to the base URL of the client.
                type: string
              alwaysDisplayInConsole:
                description: Always list this client in the Account UI, even if the
                  user does not have an active session.
                type: boolean
              backchannelLogoutRevokeOfflineTokens:
                default: false
                description: This Option is also valid when FrontchannelLogoutEnabled
                  is enabled. Specifying whether a "revoke_offline_access" event is
                  included in the Logout Token when the Backchannel Logout URL is
                  used. Keycloak will revoke offline sessions when receiving a Logout
                  Token with this event.
                type: boolean
              backchannelLogoutSessionRequired:
                default: false
                description: Specifying whether a sid (session ID) Claim is included
                  in the Logout Token when the Backchannel Logout URL is used.
                type: boolean
              backchannelLogoutUrl:
                description: URL that will cause the client to log itself out when
                  a logout request is sent to this realm (via end_session_endpoint).
                  The logout is done by sending logout token as specified in the OIDC
                  Backchannel logout specification. If omitted, the logout request
                  might be sent to the specified 'Admin URL' (if configured) in the
                  format specific to Keycloak/RH-SSO adapters. If even 'Admin URL'
                  is not configured, no logout request will be sent to the client.
                type: string
                x-kubernetes-validations:
                - message: backchannelLogoutUrl must be a valid HTTP or HTTPS URL
                  rule: size(self) == 0 || self.matches('^https?://[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}(/.*)?$')
              baseUrl:
                description: Default URL to use when the auth server needs to redirect
                  or link back to the client.
                type: string
                x-kubernetes-validations:
                - message: baseUrl must be a valid HTTP or HTTPS URL
                  rule: size(self) == 0 || self.matches('^https?://[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}(/.*)?$')
              clientAuthenticatorType:
                default: client-secret
                description: ClientAuthenticatorType specifies the client authenticator
                  type
                type: string
              clientId:
                description: The client identifier registered with the identity provider.
                type: string
                x-kubernetes-validations:
                - message: clientId is immutable
                  rule: self == oldSelf
              consentRequired:
                default: false
                description: If enabled, users have to consent to client access.
                type: boolean
              consentScreenText:
                description: Text that will be shown on the consent screen when this
                  client scope is added to some client with consent required. Defaults
                  to name of client scope if it is not filled.
                type: string
              description:
                description: 'Specifies description of the client. For example ''My
                  Client for TimeSheets''. Supports keys for localized values as well.
                  For example: ${my_client_description}.'
                type: string
              directAccessGrantsEnabled:
                default: true
                description: This enables support for Direct Access Grants, which
                  means that client has access to username/password of user and exchange
                  it directly with Keycloak server for access token. In terms of OAuth2
                  specification, this enables support of 'Resource Owner Password
                  Credentials Grant' for this client.
                type: boolean
              displayOnConsentScreen:
                default: false
                description: Applicable only if 'Consent Required' is on for this
                  client. If this switch is off, the consent screen will contain just
                  the consents corresponding to configured client scopes. If on, there
                  will be also one item on the consent screen about this client itself.
                type: boolean
              enabled:
                default: true
                description: Disabled clients cannot initiate a login or have obtained
                  access tokens.
                type: boolean
              frontchannelLogoutEnabled:
                default: false
                description: When true, logout requires a browser to send the request
                  to the client to configured Front-channel logout URL as specified
                  in the OIDC Front-channel logout specification. When false, server
                  can perform a background invocation for logout as long as either
                  the Backchannel-logout URL is configured or Admin URL is configured.
                type: boolean
              frontchannelLogoutUrl:
                description: URL that will cause the client to log itself out when
                  a logout request is sent to this realm (via end_session_endpoint).
                  If not provided, it defaults to the base url.
                type: string
                x-kubernetes-validations:
                - message: frontchannelLogoutUrl must be a valid HTTP or HTTPS URL
                  rule: size(self) == 0 || self.matches('^https?://[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}(/.*)?$')
              implicitFlowEnabled:
                description: This enables support for OpenID Connect redirect based
                  authentication without authorization code. In terms of OpenID Connect
                  or OAuth2 specifications, this enables support of 'Implicit Flow'
                  for this client.
                type: boolean
              loginTheme:
                description: The theme must exist in Keycloak. Select theme for login,
                  OTP, grant, registration and forgot password pages.
                type: string
              name:
                description: 'Specifies display name of the client. For example ''My
                  Client''. Supports keys for localized values as well. For example:
                  ${my_client}.'
                type: string
              oauth2DeviceAuthorizationGrantEnabled:
                description: This enables support for OAuth 2.0 Device Authorization
                  Grant, which means that client is an application on device that
                  has limited input capabilities or lack a suitable browser.
                type: boolean
              postLogoutRedirectUris:
                default: []
                description: Valid URI pattern a browser can redirect to after a successful
                  logout. A value of '+' or an empty field will use the list of valid
                  redirect uris. A value of '-' will not allow any post logout redirect
                  uris. Simple wildcards are allowed such as 'http://example.com/*'.
                  Relative path can be specified too such as /my/relative/path/*.
                  Relative paths are relative to the client root URL, or if none is
                  specified the auth server root URL is used.
                items:
                  type: string
                type: array
              publicClient:
                default: true
                description: PublicClient indicates if this is a public client
                type: boolean
              realmRef:
                description: RealmRef specifies which realm this client belongs to
                properties:
                  name:
                    description: Name is the name of the Realm resource
                    type: string
                  namespace:
                    description: |-
                      Namespace is the namespace of the Realm resource
                      If empty, the same namespace as the Client will be used
                    type: string
                required:
                - name
                type: object
              redirectUris:
                default: []
                description: Valid URI pattern a browser can redirect to after a successful
                  login. Simple wildcards are allowed such as 'http://example.com/*'.
                  Relative path can be specified too such as /my/relative/path/*.
                  Relative paths are relative to the client root URL, or if none is
                  specified the auth server root URL is used. For SAML, you must set
                  valid URI patterns if you are relying on the consumer service URL
                  embedded with the login request.
                items:
                  type: string
                type: array
              roles:
                items:
                  properties:
                    description:
                      type: string
                    name:
                      type: string
                  required:
                  - name
                  type: object
                type: array
              rootUrl:
                description: Root URL appended to relative URLs
                type: string
              serviceAccountsEnabled:
                default: false
                description: Allows you to authenticate this client to Keycloak and
                  retrieve access token dedicated to this client. In terms of OAuth2
                  specification, this enables support of 'Client Credentials Grant'
                  for this client.
                type: boolean
              standardFlowEnabled:
                default: true
                description: This enables standard OpenID Connect redirect based authentication
                  with authorization code. In terms of OpenID Connect or OAuth2 specifications,
                  this enables support of 'Authorization Code Flow' for this client.
                type: boolean
              webOrigins:
                default: []
                description: Allowed CORS origins. To permit all origins of Valid
                  Redirect URIs, add '+'. This does not include the '*' wildcard though.
                  To permit all origins, explicitly add '*'.
                items:
                  type: string
                type: array
            required:
            - clientId
            - realmRef
            type: object
            x-kubernetes-validations:
            - message: redirectUris can only be set when standardFlowEnabled is true
              rule: self.standardFlowEnabled || size(self.redirectUris) == 0
            - message: postLogoutRedirectUris can only be set when standardFlowEnabled
                is true
              rule: self.standardFlowEnabled || size(self.postLogoutRedirectUris)
                == 0
            - message: webOrigins can only be set when standardFlowEnabled is true
              rule: self.standardFlowEnabled || size(self.webOrigins) == 0
            - message: serviceAccountsEnabled must be false when publicClient is true
              rule: '!self.publicClient || !self.serviceAccountsEnabled'
            - message: displayOnConsentScreen can only be true when consentRequired
                is true
              rule: '!self.displayOnConsentScreen || self.consentRequired'
            - message: consentScreenText can only be set when displayOnConsentScreen
                is true
              rule: '!has(self.consentScreenText) || size(self.consentScreenText)
                == 0  || self.displayOnConsentScreen'
            - message: frontChannelLogoutUrl can only be set when frontchannelLogoutEnabled
                is true
              rule: '!has(self.frontchannelLogoutUrl) || size(self.frontchannelLogoutUrl)
                == 0 || self.frontchannelLogoutEnabled'
            - message: backchannelLogoutUrl can only be set when frontchannelLogoutEnabled
                is false
              rule: '!has(self.backchannelLogoutUrl) || size(self.backchannelLogoutUrl)
                == 0 || !self.frontchannelLogoutEnabled'
            - message: backchannelLogoutSessionRequired must be false when frontchannelLogoutEnabled
                is true
              rule: '!self.frontchannelLogoutEnabled || !self.backchannelLogoutSessionRequired'
          status:
            description: ClientStatus defines the observed state of Client
            properties:
              clientUUID:
                description: |-
                  ClientUUID is the internal Keycloak UUID for this client
                  This is set automatically and should not be modified
                type: string
              lastSyncTime:
                description: LastSyncTime is the last time the client was synced
                format: date-time
                type: string
              message:
                description: Message provides additional information about the current
                  state
                type: string
              ready:
                description: Ready indicates if the client is ready
                type: boolean
              realmReady:
                description: RealmReady indicates if the referenced realm is ready
                type: boolean
              roleUUIDs:
                additionalProperties:
                  type: string
                description: RoleUUIDs maps role names to their Keycloak UUIDs
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
